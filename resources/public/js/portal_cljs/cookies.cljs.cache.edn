{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name portal-cljs.cookies, :imports nil, :requires {goog.net.Cookies goog.net.Cookies}, :uses nil, :defs {get-cookie {:protocol-inline nil, :meta {:file "/Users/james/Purple-Services/portal-cljs/src/portal_cljs/cookies.cljs", :line 4, :column 7, :end-line 4, :end-column 17, :arglists (quote ([name])), :doc "Get cookie with name"}, :name portal-cljs.cookies/get-cookie, :variadic false, :file "src/portal_cljs/cookies.cljs", :end-column 17, :method-params ([name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name])), :doc "Get cookie with name"}, set-cookie! {:protocol-inline nil, :meta {:file "/Users/james/Purple-Services/portal-cljs/src/portal_cljs/cookies.cljs", :line 10, :column 7, :end-line 10, :end-column 18, :arglists (quote ([name value & [max-age]])), :doc "Create cookie with name and value with optional max-age", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(name value [max-age])], :arglists ([name value & [max-age]]), :arglists-meta (nil)}}, :name portal-cljs.cookies/set-cookie!, :variadic true, :file "src/portal_cljs/cookies.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(name value [max-age])], :arglists ([name value & [max-age]]), :arglists-meta (nil)}, :method-params [(name value [max-age])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists ([name value & [max-age]]), :doc "Create cookie with name and value with optional max-age"}, change-cookie! {:protocol-inline nil, :meta {:file "/Users/james/Purple-Services/portal-cljs/src/portal_cljs/cookies.cljs", :line 17, :column 7, :end-line 17, :end-column 21, :arglists (quote ([name value & [max-age]])), :doc "Change the value and optionally max-age of cookie\nwith name. Returns nil if no cookie was set.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(name value [max-age])], :arglists ([name value & [max-age]]), :arglists-meta (nil)}}, :name portal-cljs.cookies/change-cookie!, :variadic true, :file "src/portal_cljs/cookies.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(name value [max-age])], :arglists ([name value & [max-age]]), :arglists-meta (nil)}, :method-params [(name value [max-age])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists ([name value & [max-age]]), :doc "Change the value and optionally max-age of cookie\nwith name. Returns nil if no cookie was set."}, remove-cookie! {:protocol-inline nil, :meta {:file "/Users/james/Purple-Services/portal-cljs/src/portal_cljs/cookies.cljs", :line 27, :column 7, :end-line 27, :end-column 21, :arglists (quote ([name])), :doc "Remove the cookie with name."}, :name portal-cljs.cookies/remove-cookie!, :variadic false, :file "src/portal_cljs/cookies.cljs", :end-column 21, :method-params ([name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name])), :doc "Remove the cookie with name."}}, :require-macros nil, :doc nil}